version: '3'
services:
  zoo1:
      image: zookeeper
      restart: always
      container_name: zoo1
      ports:
           - "2181:2181"
      environment:
          ZOO_MY_ID: 1
          ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
      networks:
        - "mynet"


  zoo2:
      image: zookeeper
      restart: always
      container_name: zoo2
      ports:
          - "2182:2181"
      environment:
          ZOO_MY_ID: 2
          ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
      networks:
        - "mynet"

  zoo3:
      image: zookeeper
      restart: always
      container_name: zoo3
      ports:
          - "2183:2181"
      environment:
          ZOO_MY_ID: 3
          ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
      networks:
        - "mynet"

  kafka:
    image: wurstmeister/kafka
    volumes:
       - /etc/localtime:/etc/localtime  # 挂载位置（kafka镜像和宿主机器之间时间保持一直）
#   ports:   指定了kafka对外暴露的端口号 增加集群节点会报端口冲突的错误
#      - "9092:9092"
    depends_on:   # zoo1 。。启动后启动
      - zoo1
      - zoo2
      - zoo3
    links:
      - zoo1
      - zoo2
      - zoo3
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.150.130   # 自定义host
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
    networks:
      - "mynet"

#kafak管理
  kafka-manager:
      image: sheepkiller/kafka-manager                ## 镜像：开源的web管理kafka集群的界面
      environment:
          ZK_HOSTS: 192.168.150.130                   ## 修改:宿主机IP
      ports:
        - "9000:9000"
      networks:
        - "mynet"





#指定network是桥连的方式，并制定子网ip
networks:
  mynet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.7.1/24


